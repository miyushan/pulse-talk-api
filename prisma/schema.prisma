generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int         @id @default(autoincrement())
  firstName       String    
  lastName        String?
  userName        String
  email           String      @unique
  password        String      @db.VarChar(255)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  chatRooms       ChatRoom[]  @relation("ChatRoomUsers")
  messages        Message[]
  chatMemberships ChatRoomUsers[]
}

model ChatRoom {
  id              Int             @id @default(autoincrement())
  name            String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  users           User[]          @relation("ChatRoomUsers")
  messages        Message[]
  userMemberships ChatRoomUsers[]
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  imageUrl   String?
  userId     Int
  chatRoomId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id], onDelete: Cascade)
}

model ChatRoomUsers {
  chatRoomId Int
  userId     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id], onDelete: Cascade)

  @@id([chatRoomId, userId])
}